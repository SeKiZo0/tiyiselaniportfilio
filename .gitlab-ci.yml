stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_NAME: your-nextjs-app
  DOCKER_TAG: latest
  CONTAINER_NAME: nextjs-app

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$DOCKER_TAG .
    - docker push $CI_REGISTRY_IMAGE:$DOCKER_TAG
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $SERVER_USER@$SERVER_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $CI_REGISTRY_IMAGE:$DOCKER_TAG &&
      docker stop $CONTAINER_NAME || true &&
      docker rm $CONTAINER_NAME || true &&
      docker run -d --name $CONTAINER_NAME -p 3000:3000 --restart unless-stopped $CI_REGISTRY_IMAGE:$DOCKER_TAG
      "
  only:
    - main